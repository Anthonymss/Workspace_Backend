spring.application.name=gateway-service
server.port=8080
# Configuraci√≥n de Spring Cloud Gateway
#aUTH
spring.cloud.gateway.routes[0].id=auth-service
#http://localhost:8081
spring.cloud.gateway.routes[0].uri=lb://auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
#Management
spring.cloud.gateway.routes[1].id=management-user
#http://localhost:8082
spring.cloud.gateway.routes[1].uri=lb://management-user
spring.cloud.gateway.routes[1].predicates[0]=Path=/management/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
#http://localhost:8084
spring.cloud.gateway.routes[2].uri=lb://spaces-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/spaces/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1
#http://localhost:8086
spring.cloud.gateway.routes[3].uri=lb://reservation-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/reservation/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1
management.endpoints.web.exposure.include=*
logging.level.org.springframework.web=DEBUG
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=https://eureka-netflix.onrender.com/eureka/
eureka.instance.prefer-ip-address=false
eureka.instance.hostname=api-gateway-iw9w.onrender.com
eureka.instance.non-secure-port-enabled=false
eureka.instance.secure-port-enabled=true
eureka.instance.secure-port=443
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30
